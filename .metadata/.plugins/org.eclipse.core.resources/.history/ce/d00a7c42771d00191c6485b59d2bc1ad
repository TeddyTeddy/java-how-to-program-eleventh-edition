import java.security.SecureRandom;

public class AssignRandom2 {
	
	// for function a, refer to page 231 in the book
	private static final int shiftingValue_a = 2;
	private static final int differenceBetweenValues_a = 2;
	private static final int scalingFactor_a = 5;
	
	private static final SecureRandom randomNumbers = new SecureRandom();
	
	public static void main(String[] args) {
		test_a();
	}
	
	private static void test_a() {
		boolean isFailed = false;
		for(int i = 1; i <= 1000; ++i) {
			int value = a();
			if((value == 2) || (value == 4) || (value == 6) || (value == 8) || (value == 10)) {
				isFailed = true;
				System.out.printf("a() returned %d%n", value); 
				break;
			}
		}
		if(isFailed) {
			System.out.println("a() failed");
		} else {
			System.out.println("a() passed");		
		}
	}
	
	private static int a() {
		return shiftingValue_a 
				+ differenceBetweenValues_a * randomNumbers.nextInt(scalingFactor_a);
	}
}